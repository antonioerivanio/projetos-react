{"ast":null,"code":"import { USUARIO_CADASTRAR_CONTA_FAIL, USUARIO_CADASTRAR_CONTA_REQUEST, USUARIO_CADASTRAR_CONTA_SUCESS, USUARIO_ENTRAR_CONTA_FAIL, USUARIO_ENTRAR_CONTA_REQUEST, USUARIO_ENTRAR_CONTA_SUCESS, USUARIO_SAIR_CONTA } from '../constantes/constanteUsuario';\nimport api from '../utils/services/api';\nexport const entrar = (email, senha) => async dispatch => {\n  dispatch({\n    type: USUARIO_ENTRAR_CONTA_REQUEST,\n    payload: {\n      email,\n      senha\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await api.post(`/api/usuarios/entrar`, {\n      email,\n      senha\n    });\n    dispatch({\n      type: USUARIO_ENTRAR_CONTA_SUCESS,\n      payload: data\n    });\n    localStorage.setItem('infoUsuario', JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USUARIO_ENTRAR_CONTA_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const cadastrar = (nome, email, senha, isAdmin) => async dispatch => {\n  dispatch({\n    type: USUARIO_CADASTRAR_CONTA_REQUEST,\n    payload: {\n      nome,\n      email,\n      senha,\n      isAdmin\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await api.post(`/api/usuarios/cadastrar`, {\n      nome,\n      email,\n      senha,\n      isAdmin\n    });\n    dispatch({\n      type: USUARIO_CADASTRAR_CONTA_SUCESS,\n      payload: data\n    }); // localStorage.setItem('infoUsuario', JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USUARIO_CADASTRAR_CONTA_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const sair = () => dispatch => {\n  localStorage.removeItem('infoUsuario');\n  localStorage.removeItem('itensCarrinho');\n  dispatch({\n    type: USUARIO_SAIR_CONTA\n  });\n};","map":{"version":3,"sources":["C:/Users/agil/Documents/GIT e GITHUB/projetos-react/sistema-agil-impressoes/cliente/src/actions/usuariosAction.js"],"names":["USUARIO_CADASTRAR_CONTA_FAIL","USUARIO_CADASTRAR_CONTA_REQUEST","USUARIO_CADASTRAR_CONTA_SUCESS","USUARIO_ENTRAR_CONTA_FAIL","USUARIO_ENTRAR_CONTA_REQUEST","USUARIO_ENTRAR_CONTA_SUCESS","USUARIO_SAIR_CONTA","api","entrar","email","senha","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","console","log","response","message","cadastrar","nome","isAdmin","sair","removeItem"],"mappings":"AAAA,SACEA,4BADF,EAEEC,+BAFF,EAGEC,8BAHF,EAIEC,yBAJF,EAKEC,4BALF,EAMEC,2BANF,EAOEC,kBAPF,QAQO,gCARP;AASA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB,MAAOC,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,4BAAR;AAAsCS,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAA/C,GAAD,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACQ,IAAJ,CAAU,sBAAV,EAAiC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,2BADC;AAEPQ,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAApC;AACD,GAPD,CAOE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,yBADC;AAEPU,MAAAA,OAAO,EACLO,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACIJ,KAAK,CAACG,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEIJ,KAAK,CAACI;AALL,KAAD,CAAR;AAOD;AACF,CApBM;AAsBP,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOjB,KAAP,EAAcC,KAAd,EAAqBiB,OAArB,KAAiC,MAAOhB,QAAP,IAAoB;AAC5EA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX,+BADC;AAEPY,IAAAA,OAAO,EAAE;AAAEa,MAAAA,IAAF;AAAQjB,MAAAA,KAAR;AAAeC,MAAAA,KAAf;AAAsBiB,MAAAA;AAAtB;AAFF,GAAD,CAAR;;AAKA,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACQ,IAAJ,CAAU,yBAAV,EAAoC;AACzDW,MAAAA,IADyD;AAEzDjB,MAAAA,KAFyD;AAGzDC,MAAAA,KAHyD;AAIzDiB,MAAAA;AAJyD,KAApC,CAAvB;AAMAhB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,8BADC;AAEPW,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR,CAPE,CAWF;AACD,GAZD,CAYE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,4BADC;AAEPa,MAAAA,OAAO,EACLO,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACIJ,KAAK,CAACG,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEIJ,KAAK,CAACI;AALL,KAAD,CAAR;AAOD;AACF,CA5BM;AA8BP,OAAO,MAAMI,IAAI,GAAG,MAAOjB,QAAD,IAAc;AACtCK,EAAAA,YAAY,CAACa,UAAb,CAAwB,aAAxB;AACAb,EAAAA,YAAY,CAACa,UAAb,CAAwB,eAAxB;AAEAlB,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAGD,CAPM","sourcesContent":["import {\r\n  USUARIO_CADASTRAR_CONTA_FAIL,\r\n  USUARIO_CADASTRAR_CONTA_REQUEST,\r\n  USUARIO_CADASTRAR_CONTA_SUCESS,\r\n  USUARIO_ENTRAR_CONTA_FAIL,\r\n  USUARIO_ENTRAR_CONTA_REQUEST,\r\n  USUARIO_ENTRAR_CONTA_SUCESS,\r\n  USUARIO_SAIR_CONTA,\r\n} from '../constantes/constanteUsuario';\r\nimport api from '../utils/services/api';\r\n\r\nexport const entrar = (email, senha) => async (dispatch) => {\r\n  dispatch({ type: USUARIO_ENTRAR_CONTA_REQUEST, payload: { email, senha } });\r\n\r\n  try {\r\n    const { data } = await api.post(`/api/usuarios/entrar`, { email, senha });\r\n    dispatch({\r\n      type: USUARIO_ENTRAR_CONTA_SUCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('infoUsuario', JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: USUARIO_ENTRAR_CONTA_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cadastrar = (nome, email, senha, isAdmin) => async (dispatch) => {\r\n  dispatch({\r\n    type: USUARIO_CADASTRAR_CONTA_REQUEST,\r\n    payload: { nome, email, senha, isAdmin },\r\n  });\r\n\r\n  try {\r\n    const { data } = await api.post(`/api/usuarios/cadastrar`, {\r\n      nome,\r\n      email,\r\n      senha,\r\n      isAdmin,\r\n    });\r\n    dispatch({\r\n      type: USUARIO_CADASTRAR_CONTA_SUCESS,\r\n      payload: data,\r\n    });\r\n    // localStorage.setItem('infoUsuario', JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: USUARIO_CADASTRAR_CONTA_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const sair = () => (dispatch) => {\r\n  localStorage.removeItem('infoUsuario');\r\n  localStorage.removeItem('itensCarrinho');\r\n\r\n  dispatch({\r\n    type: USUARIO_SAIR_CONTA,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}