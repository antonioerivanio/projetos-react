{"ast":null,"code":"import { CARRINHO_VAZIO, DETALHES_PEDIDO_FALHA, DETALHES_PEDIDO_REQUEST, DETALHES_PEDIDO_SUCESSO, PEDIDO_CRIA_FALHA, PEDIDO_CRIA_REQUEST, PEDIDO_CRIA_SUCESSO } from \"../constantes/constantesPedido\";\nimport api from '../utils/services/api';\nexport const criarPedido = pedido => async (dispatch, getState) => {\n  dispatch({\n    type: PEDIDO_CRIA_REQUEST,\n    payload: pedido\n  });\n\n  try {\n    const {\n      entrarConta: {\n        infoUsuario\n      }\n    } = getState();\n    const {\n      data\n    } = await api.post('/api/pedidos', pedido, {\n      headers: {\n        Authorization: `Bearer ${infoUsuario.token}`\n      }\n    });\n    dispatch({\n      type: PEDIDO_CRIA_SUCESSO,\n      payload: data.pedido\n    });\n    dispatch({\n      type: CARRINHO_VAZIO\n    });\n    localStorage.removeItem('itensCarrinho');\n  } catch (error) {\n    dispatch({\n      type: PEDIDO_CRIA_FALHA,\n      payload: error.message && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detalhesPedido = id => async (dispatch, getState) => {\n  dispatch({\n    type: DETALHES_PEDIDO_REQUEST,\n    payload: id\n  });\n\n  try {\n    const {\n      entrarConta: {\n        infoUsuario\n      }\n    } = getState();\n    const {\n      data\n    } = await api.post(`/api/pedidos/${id}`, {\n      headers: {\n        Authorization: `Bearer ${infoUsuario.token}`\n      }\n    });\n    dispatch({\n      type: DETALHES_PEDIDO_SUCESSO,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: DETALHES_PEDIDO_FALHA,\n      payload: error.message && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/oem/Documentos/projetos-react/sistema-agil-impressoes/cliente/src/actions/pedidoAction.js"],"names":["CARRINHO_VAZIO","DETALHES_PEDIDO_FALHA","DETALHES_PEDIDO_REQUEST","DETALHES_PEDIDO_SUCESSO","PEDIDO_CRIA_FALHA","PEDIDO_CRIA_REQUEST","PEDIDO_CRIA_SUCESSO","api","criarPedido","pedido","dispatch","getState","type","payload","entrarConta","infoUsuario","data","post","headers","Authorization","token","localStorage","removeItem","error","message","response","detalhesPedido","id"],"mappings":"AACA,SAASA,cAAT,EAAyBC,qBAAzB,EAAgDC,uBAAhD,EAAyEC,uBAAzE,EAAkGC,iBAAlG,EAAqHC,mBAArH,EAA0IC,mBAA1I,QAAqK,gCAArK;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAY,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAChED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACP,mBAAN;AAA2BQ,IAAAA,OAAO,EAAEJ;AAApC,GAAD,CAAR;;AAEA,MAAI;AAEA,UAAM;AAACK,MAAAA,WAAW,EAAC;AAACC,QAAAA;AAAD;AAAb,QAA8BJ,QAAQ,EAA5C;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMT,GAAG,CAACU,IAAJ,CAAS,cAAT,EAAyBR,MAAzB,EAAiC;AACpDS,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAG,UAASJ,WAAW,CAACK,KAAM;AADvC;AAD4C,KAAjC,CAAvB;AAMAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEN,mBAAP;AAA4BO,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA1C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEZ;AAAP,KAAD,CAAR;AACAqB,IAAAA,YAAY,CAACC,UAAb,CAAwB,eAAxB;AAEH,GAdD,CAcC,OAAMC,KAAN,EAAY;AACTb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,iBADD;AAELS,MAAAA,OAAO,EACLU,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBQ,OAArC,GACID,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBQ,OADxB,GAEID,KAAK,CAACC;AALP,KAAD,CAAR;AAOH;AACJ,CA1BM;AA6BP,OAAO,MAAME,cAAc,GAAIC,EAAD,IAAQ,OAAOjB,QAAP,EAAiBC,QAAjB,KAA6B;AAC/DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACV,uBAAN;AAA+BW,IAAAA,OAAO,EAAEc;AAAxC,GAAD,CAAR;;AAEA,MAAI;AAEA,UAAM;AAACb,MAAAA,WAAW,EAAC;AAACC,QAAAA;AAAD;AAAb,QAA8BJ,QAAQ,EAA5C;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMT,GAAG,CAACU,IAAJ,CAAU,gBAAeU,EAAG,EAA5B,EAA+B;AAClDT,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAG,UAASJ,WAAW,CAACK,KAAM;AADvC;AAD0C,KAA/B,CAAvB;AAMAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAET,uBAAP;AAAgCU,MAAAA,OAAO,EAAEG;AAAzC,KAAD,CAAR;AAEH,GAZD,CAYC,OAAMO,KAAN,EAAY;AACTb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX,qBADD;AAELY,MAAAA,OAAO,EACLU,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBQ,OAArC,GACID,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBQ,OADxB,GAEID,KAAK,CAACC;AALP,KAAD,CAAR;AAOH;AACJ,CAxBM","sourcesContent":["\nimport { CARRINHO_VAZIO, DETALHES_PEDIDO_FALHA, DETALHES_PEDIDO_REQUEST, DETALHES_PEDIDO_SUCESSO, PEDIDO_CRIA_FALHA, PEDIDO_CRIA_REQUEST, PEDIDO_CRIA_SUCESSO } from \"../constantes/constantesPedido\"\nimport api from '../utils/services/api';\n\nexport const criarPedido = (pedido) => async (dispatch, getState) =>{\n    dispatch({type:PEDIDO_CRIA_REQUEST, payload: pedido});\n\n    try {\n        \n        const {entrarConta:{infoUsuario}} = getState();\n            \n        const { data } = await api.post('/api/pedidos', pedido, {\n            headers:{\n                Authorization: `Bearer ${infoUsuario.token}`,\n            },\n        });\n\n        dispatch({type: PEDIDO_CRIA_SUCESSO, payload: data.pedido});\n        dispatch({type: CARRINHO_VAZIO})\n        localStorage.removeItem('itensCarrinho');\n        \n    }catch(error){\n        dispatch({\n            type: PEDIDO_CRIA_FALHA,\n            payload:\n              error.message && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n          });\n    }\n}\n\n\nexport const detalhesPedido = (id) => async (dispatch, getState) =>{\n    dispatch({type:DETALHES_PEDIDO_REQUEST, payload: id});\n\n    try {\n        \n        const {entrarConta:{infoUsuario}} = getState();\n            \n        const { data } = await api.post(`/api/pedidos/${id}`, {\n            headers:{\n                Authorization: `Bearer ${infoUsuario.token}`,\n            },\n        });\n\n        dispatch({type: DETALHES_PEDIDO_SUCESSO, payload: data});\n        \n    }catch(error){\n        dispatch({\n            type: DETALHES_PEDIDO_FALHA,\n            payload:\n              error.message && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n          });\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}