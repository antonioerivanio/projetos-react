{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documentos/projetos-react/sistema-agil-impressoes/cliente/src/paginas/TelaCadastro.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { cadastrar } from '../actions/usuariosAction';\nimport LoadingBox from '../componentes/mensages/LoadingBox';\nimport MensageBox from '../componentes/mensages/MensageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TelaCadastro(props) {\n  _s();\n\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setConfirmarSenha] = useState('');\n  const [isAdministrador, setIsAdministrador] = useState(false);\n  let navigate = useNavigate();\n  const entrarConta = useSelector(state => state.entrarConta);\n  const {\n    infoUsuario,\n    loading,\n    error\n  } = entrarConta;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (senha !== confirmarSenha) {\n      alert('Senha e Confirmar Senha devem ser iguais!');\n    } else {\n      dispatch(cadastrar(nome, email, senha));\n    }\n  };\n\n  useEffect(() => {\n    if (infoUsuario) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cadastrar Conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(MensageBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nome\",\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nome\",\n          placeholder: \"nome completo\",\n          required: true,\n          onChange: e => setNome(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"email@gmail.com\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"senha\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"senha\",\n          placeholder: \"e@2tY\",\n          required: true,\n          onChange: e => setSenha(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmarSenha\",\n          children: \"Confirmar Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmarSenha\",\n          required: true,\n          onChange: e => setConfirmarSenha(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"J\\xE1 sou Cliente?\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/entrar\",\n              children: \"Tela de Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TelaCadastro, \"tn14VqT7OCEq6ENPSW186/4tFgo=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n\n_c = TelaCadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"TelaCadastro\");","map":{"version":3,"sources":["/home/oem/Documentos/projetos-react/sistema-agil-impressoes/cliente/src/paginas/TelaCadastro.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","useNavigate","cadastrar","LoadingBox","MensageBox","TelaCadastro","props","nome","setNome","email","setEmail","senha","setSenha","confirmarSenha","setConfirmarSenha","isAdministrador","setIsAdministrador","navigate","entrarConta","state","infoUsuario","loading","error","dispatch","submitHandler","e","preventDefault","alert","replace","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { cadastrar } from '../actions/usuariosAction';\nimport LoadingBox from '../componentes/mensages/LoadingBox';\nimport MensageBox from '../componentes/mensages/MensageBox';\n\nexport function TelaCadastro(props) {\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setConfirmarSenha] = useState('');\n  const [isAdministrador, setIsAdministrador] = useState(false);\n\n  let navigate = useNavigate();\n  const entrarConta = useSelector((state) => state.entrarConta);\n  const { infoUsuario, loading, error } = entrarConta;\n\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (senha !== confirmarSenha) {\n      alert('Senha e Confirmar Senha devem ser iguais!');\n    } else {\n      dispatch(cadastrar(nome, email, senha));\n    }\n  };\n\n  useEffect(() => {\n    if (infoUsuario) {\n      navigate('/', { replace: true });\n    }\n  });\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Cadastrar Conta</h1>\n        </div>\n        {loading && <LoadingBox></LoadingBox>}\n        {error && <MensageBox></MensageBox>}\n        <div>\n          <label htmlFor=\"nome\">Nome</label>\n          <input\n            type=\"text\"\n            id=\"nome\"\n            placeholder=\"nome completo\"\n            required\n            onChange={(e) => setNome(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"email@gmail.com\"\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"senha\">Senha</label>\n          <input\n            type=\"password\"\n            id=\"senha\"\n            placeholder=\"e@2tY\"\n            required\n            onChange={(e) => setSenha(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"confirmarSenha\">Confirmar Senha</label>\n          <input\n            type=\"password\"\n            id=\"confirmarSenha\"\n            required\n            onChange={(e) => setConfirmarSenha(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label>\n            <button className=\"primary\" type=\"submit\">\n              Entrar\n            </button>\n          </label>\n        </div>\n        <div>\n          <label />\n          <div>\n            <div>\n              Já sou Cliente?\n              <Link to=\"/entrar\">Tela de Login</Link>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}